<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.notework.nw.dao.NoteDao">
		
	<select id="getListByWriterId" parameterType="String" resultType="com.notework.nw.entity.view.NoteView">
		select id, title, writerId, writerName, hit, regDate, commentCnt, clipCnt from NoteView where writerId=#{writerId} order by regDate DESC
	</select>
	
	<select id="getListByTitle" parameterType="String" resultType="com.notework.nw.entity.view.NoteView">
		select id, title, writerId, writerName, hit, regDate, commentCnt, clipCnt from NoteView where writerId=#{writerId} and title like concat('%', #{title}, '%') order by regDate DESC
	</select>
	
	<select id="getListByTags" parameterType="Map" resultType="com.notework.nw.entity.view.NoteView">
		select id, title, writerId, writerName, hit, regDate, commentCnt, clipCnt from
		<choose>
			<when test="size == 1">
				NoteSearchT1View
			</when>
			<when test="size == 2">
				NoteSearchT2View
			</when>
			<when test="size == 3">
				NoteSearchT3View
			</when>
			<when test="size == 4">
				NoteSearchT4View
			</when>
			<when test="size == 5">
				NoteSearchT5View
			</when>
		</choose> 
			where writerId=#{writerId}
		<if test="tag1 != null"> and t1=#{tag1}</if>
		<if test="tag2 != null"> and t2=#{tag2}</if>
		<if test="tag3 != null"> and t3=#{tag3}</if>
		<if test="tag4 != null"> and t4=#{tag4}</if>
		<if test="tag5 != null"> and t5=#{tag5}</if> 
	</select>
	
	<select id="getListByClip">
		select id, title, writerId, writerName, content, hit, regDate, commentCnt, clipCnt from NoteView where 	
	</select>

	<select id="get" resultType="com.notework.nw.entity.view.NoteView">
		select id, title, writerId, writerName, content, hit, regDate, commentCnt, clipCnt from NoteView where id=#{id}
	</select>
	
	<insert id="insert" parameterType="com.notework.nw.entity.Note" useGeneratedKeys="true" keyProperty="id">
		insert into Note(title, content, writerId, publish)
		values(#{title}, #{content}, #{writerId}, #{publish})
	</insert>
	
	<update id="updateHit" parameterType="com.notework.nw.entity.Note">
		update Note set hit=hit+1 where id=#{id}
	</update>
	
</mapper>